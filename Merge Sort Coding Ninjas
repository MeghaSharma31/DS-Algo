public class Solution {
	public static void mergeSort(int[] arr, int n) {
		// Write your code here.
        mergeSortHelper(arr,n);
	}
    public static void mergeSortHelper(int[] arr, int n) {
        if(n == 0 || n == 1)
           return; 
        int s = 0;
        int e = n-1;
        int mid = s + (e-s)/2;
        int[] s1 = new int[mid - s + 1];
        int[] s2 = new int[e - mid];
        for(int i =0;i<=mid;i++)
            s1[i] = arr[i];
        for(int i = mid+1;i<=e;i++)
            s2[i-(mid+1)] = arr[i];
        mergeSortHelper(s1,s1.length);
        mergeSortHelper(s2,s2.length);
        merge(s1,s2,arr);
    }
    public static void merge(int[] s1, int[] s2, int[] arr) {
        int l = 0;
        int r = 0;
        int i = 0;
        while(l < s1.length && r <s2.length) {
           if(s1[l] < s2[r]) {
               arr[i++] = s1[l++]; 
           }
            else if(s1[l] >= s2[r]) {
                arr[i++] = s2[r++];
            }
        }
        while(l<s1.length) {
            arr[i++] = s1[l++];
        }
        while(r<s2.length) {
            arr[i++] = s2[r++];
        }
        
    }
}
